/*
 * BootNotificationRequest.kt
 *
 * This code was generated by json-kotlin-schema-codegen - JSON Schema Code Generator
 * See https://github.com/pwall567/json-kotlin-schema-codegen
 *
 * It is not advisable to modify generated code as any modifications will be lost
 * when the generation process is re-run.
 */
package io.opencpms.ocpp16.protocol.message

import io.opencpms.ocpp16.protocol.Ocpp16IncomingMessage

data class BootNotificationRequest(
    val chargePointVendor: String,
    val chargePointModel: String,
    val chargePointSerialNumber: String? = null,
    val chargeBoxSerialNumber: String? = null,
    val firmwareVersion: String? = null,
    val iccid: String? = null,
    val imsi: String? = null,
    val meterType: String? = null,
    val meterSerialNumber: String? = null
) : Ocpp16IncomingMessage {

    init {
        require(chargePointVendor.length <= 20) { "chargePointVendor length > maximum 20 - ${chargePointVendor.length}" }
        require(chargePointModel.length <= 20) { "chargePointModel length > maximum 20 - ${chargePointModel.length}" }
        if (chargePointSerialNumber != null)
            require(chargePointSerialNumber.length <= 25) { "chargePointSerialNumber length > maximum 25 - ${chargePointSerialNumber.length}" }
        if (chargeBoxSerialNumber != null)
            require(chargeBoxSerialNumber.length <= 25) { "chargeBoxSerialNumber length > maximum 25 - ${chargeBoxSerialNumber.length}" }
        if (firmwareVersion != null)
            require(firmwareVersion.length <= 50) { "firmwareVersion length > maximum 50 - ${firmwareVersion.length}" }
        if (iccid != null)
            require(iccid.length <= 20) { "iccid length > maximum 20 - ${iccid.length}" }
        if (imsi != null)
            require(imsi.length <= 20) { "imsi length > maximum 20 - ${imsi.length}" }
        if (meterType != null)
            require(meterType.length <= 25) { "meterType length > maximum 25 - ${meterType.length}" }
        if (meterSerialNumber != null)
            require(meterSerialNumber.length <= 25) { "meterSerialNumber length > maximum 25 - ${meterSerialNumber.length}" }
    }

}